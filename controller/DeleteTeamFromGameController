package graduate;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Date;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller

public class DeleteTeamFromGameController {
	final static String html=   "<head><link href='./static/css/bootstrap.min.css' rel='stylesheet'>"+ 
			"<link href='./static/css/font-awesome.min.css' rel='stylesheet'>"+ 
			"<link href='./static/css/font-face.css' rel='stylesheet'>"+ 
			"<meta charset='utf-8' />"+ 
			"<script type='text/javascript' src='./static/js/jquery-1.11.2.min.js'></script> "+   
			"<script src='./static/js/bootstrap.min.js'></script>"+  
			"<script src='./static/js/bootbox.min.js'></script></head>";
	
	@RequestMapping(value = "/DeleteTeamDo", method = RequestMethod.POST)
	public void DeleteTeamDo(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
	    response.setCharacterEncoding("utf-8");
	    
	    String gameName = request.getParameter("gameName").trim();
	    String teamName = request.getParameter("teamName").trim();
	    PrintWriter out = response.getWriter();
	    GameManageDao find = new GameManageDao();
	    String gameStatus = find.checkBegin(gameName);
	    if(gameStatus.equals("未开赛")) {
	    	boolean isDelete = find.deleteTeam(gameName, teamName);
	    	if(isDelete) {
	    		out.print(html); 
	 			out.print("<body><script>bootbox.alert('<br><B>成功移除该球队。',function (){window.location.href='toShowTeamGame';})</script></body>");
	    	}
	    	else {
	    		out.print(html); 
	 			out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
	    	}
	    }
	    else {
	    	out.print(html); 
 			out.print("<body><script>bootbox.alert('<br><B>只有未开赛的比赛才可以进行此操作。',function (){window.history.go(-1);})</script></body>");
	    }
	}
}
