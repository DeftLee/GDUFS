package graduate;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Date;
import java.util.ArrayList;

public class GameResultManageController {
	final static String html=   "<head><link href='./static/css/bootstrap.min.css' rel='stylesheet'>"+ 
			"<link href='./static/css/font-awesome.min.css' rel='stylesheet'>"+ 
			"<link href='./static/css/font-face.css' rel='stylesheet'>"+ 
			"<meta charset='utf-8' />"+ 
			"<script type='text/javascript' src='./static/js/jquery-1.11.2.min.js'></script> "+   
			"<script src='./static/js/bootstrap.min.js'></script>"+  
			"<script src='./static/js/bootbox.min.js'></script></head>";
	
	//去录入小组赛比赛界面
	@RequestMapping(value = "/toSetRoundGameRecord", method = RequestMethod.GET)
	public String toSetRoundGameRecord(HttpSession session,Model model) {
		String userName = (String)session.getAttribute("userName"); //主办方的名字
		String gameName = (String)session.getAttribute("gameName"); //比赛名
		
		if(userName!=null) {
			GameResultManageDao manage = new GameResultManageDao();
			int teamNumber = manage.getTeamNumber(gameName);
			int groupNumber = 0;
			if(teamNumber==5||teamNumber==6||teamNumber==7||teamNumber==8) {
				groupNumber = 2;
			}
			else if(teamNumber==9||teamNumber==10||teamNumber==11||teamNumber==12) {
				groupNumber = 3;
			}
			else{
				groupNumber = 4;
			}
			
			ArrayList groupGameLeftA = null;
			ArrayList groupGameLeftB = null;
			ArrayList groupGameLeftC = null;
			ArrayList groupGameLeftD = null;
			if(groupNumber==2) {
				groupGameLeftA = manage.getGroupGameLeft(gameName, "A");
				groupGameLeftB = manage.getGroupGameLeft(gameName, "B");
				model.addAttribute("groupGameLeftA",groupGameLeftA);
				model.addAttribute("groupGameLeftB",groupGameLeftB);
			}
			else if(groupNumber==3) {
				groupGameLeftA = manage.getGroupGameLeft(gameName, "A");
				groupGameLeftB = manage.getGroupGameLeft(gameName, "B");
				groupGameLeftC = manage.getGroupGameLeft(gameName, "C");
				model.addAttribute("groupGameLeftA",groupGameLeftA);
				model.addAttribute("groupGameLeftB",groupGameLeftB);
				model.addAttribute("groupGameLeftC",groupGameLeftC);
			}
			else {
				groupGameLeftA = manage.getGroupGameLeft(gameName, "A");
				groupGameLeftB = manage.getGroupGameLeft(gameName, "B");
				groupGameLeftC = manage.getGroupGameLeft(gameName, "C");
				groupGameLeftD = manage.getGroupGameLeft(gameName, "D");
				model.addAttribute("groupGameLeftA",groupGameLeftA);
				model.addAttribute("groupGameLeftB",groupGameLeftB);
				model.addAttribute("groupGameLeftC",groupGameLeftC);
				model.addAttribute("groupGameLeftD",groupGameLeftD);
			}
			model.addAttribute("groupNumber",groupNumber);
			model.addAttribute("gameName",gameName);
			return "SetGameRecord";
		}
		else {
			return "LoginFirst";
		}
	}
	
	//表单提交比赛结果存入数据库中
	@RequestMapping(value = "/SetRoundGameRecord", method = RequestMethod.POST)
	public void SetRoundGameRecord(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		
		String gameName = request.getParameter("gameName").trim();
		String group = request.getParameter("group").trim();
		String teamA = request.getParameter("teamA").trim();
		String teamB = request.getParameter("teamB").trim();
		Date date = Date.valueOf(request.getParameter("date").trim());
		int goalA = Integer.parseInt(request.getParameter("goalA").trim());
		int goalB = Integer.parseInt(request.getParameter("goalB").trim());
		PrintWriter out = response.getWriter();
		GameResultManageDao manage = new GameResultManageDao();
		
		boolean checkSetGame = manage.setGroupResult(gameName, teamA, teamB, goalA, goalB, date, group);
		if(checkSetGame) {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>比赛结果录入成功。',function (){window.location.href='toSetRoundGameRecord';})</script></body>");
		}
		else {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
		}
		
		out.flush();
		out.close();
	}
}
