package com.gdufs.graduation;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Date;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller

public class FinanceManageController {
	final static String html=   "<head><link href='./static/css/bootstrap.min.css' rel='stylesheet'>"+ 
			"<link href='./static/css/font-awesome.min.css' rel='stylesheet'>"+ 
			"<link href='./static/css/font-face.css' rel='stylesheet'>"+ 
			"<meta charset='utf-8' />"+ 
			"<script type='text/javascript' src='./static/js/jquery-1.11.2.min.js'></script> "+   
			"<script src='./static/js/bootstrap.min.js'></script>"+  
			"<script src='./static/js/bootbox.min.js'></script></head>";
	
	//放到HomeController
	@RequestMapping(value = "/toFinanceManage", method = RequestMethod.GET)
	public String toPlayerManage(HttpSession session,Model model) {
		String userName = (String)session.getAttribute("userName");
		FinanceManage financeManage = new FinanceManage();
		int fee[] = financeManage.getFee(userName);
		int sum = fee[0];
		int income = fee[1];
		int pay = fee[2];
		if (userName!=null) {
			model.addAttribute("sum",sum);
			model.addAttribute("income",income);
			model.addAttribute("pay",pay);
			return "FinanceManage";
		}
		else {
			return "LoginFirst";
		}
	}
	
	//添加一条财务记录
	@RequestMapping(value = "/addFinanceRecord", method = RequestMethod.POST)
	public String addFinanceRecord(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
	    response.setCharacterEncoding("utf-8");
	    
	    PrintWriter out = response.getWriter();
	    String teamName = request.getParameter("teamName").trim();
	    String type = request.getParameter("type").trim();
	    int amount = Integer.parseInt(request.getParameter("amount").trim());
	    int sum = Integer.parseInt(request.getParameter("sum").trim());
	    int income = Integer.parseInt(request.getParameter("income").trim());
	    int pay = Integer.parseInt(request.getParameter("pay").trim());
	    Date time = request.getParameter("time").trim();
	    String year = request.getParameter("year").trim();
	    String month = request.getParameter("month").trim();
	    String remark = request.getParameter("remark").trim();
	    FinanceManage financeManage = new FinanceManage();
	    
	    if(type.equals("收入")) {
	    	sum += amount;
	    	income += amount;
	    }
	    else {
	    	sum -= amount;
	    	pay += amount;
	    }
	    
	    boolean checkAdd = financeManage.setRecord(teamName, type, amount, sum, income, pay, time, year, month, remark);
	    if(checkAdd) {
	    	out.print(html); 
 			out.print("<body><script>bootbox.alert('<br><B>收支记录添加成功。',function (){window.location.href='toFinanceManage';})</script></body>");
	    }
	    else {
	    	out.print(html); 
 			out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
	    }
	    out.flush();
		out.close();
	}
	
	//查看历史财务记录，表格+数据可视化
	@RequestMapping(value = "/showHistoryRecord", method = RequestMethod.POST)
	public String showHistoryRecord(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
	    response.setCharacterEncoding("utf-8");
	    
	    PrintWriter out = response.getWriter();
	    String teamName = request.getParameter("teamName").trim();
	    FinanceManage financeManage = new FinanceManage();
	    ArrayList recordList = financeManage.findRecord(teamName);
	    
	    if(recordList==null) {
	    	out.print(html); 
 			out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
 			out.flush();
 			out.close();
	    }
	    else {
	    	model.addAttribute("recordList",recordList);
	    	return "ShowHistoryRecord";
	    }
	}
	
	//查看年度财务记录，表格+数据可视化
	@RequestMapping(value = "/showAnnualRecord", method = RequestMethod.POST)
	public String showAnnualRecord(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
	    response.setCharacterEncoding("utf-8");
	    
	    PrintWriter out = response.getWriter();
	    String teamName = request.getParameter("teamName").trim();
	    String year = request.getParameter("year").trim();
	    FinanceManage financeManage = new FinanceManage();
	    ArrayList recordList = financeManage.findRecord(teamName, year);
	    
	    if(recordList==null) {
	    	out.print(html); 
 			out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
 			out.flush();
 			out.close();
	    }
	    else {
	    	model.addAttribute("recordList",recordList);
	    	return "ShowAnnualRecord";
	    }
	}
	
	//查看月度财务记录，表格+数据可视化
	@RequestMapping(value = "/showMonthRecord", method = RequestMethod.POST)
	public String showAnnualRecord(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
	    response.setCharacterEncoding("utf-8");
	    
	    PrintWriter out = response.getWriter();
	    String teamName = request.getParameter("teamName").trim();
	    String year = request.getParameter("year").trim();
	    String month = request.getParameter("month").trim();
	    FinanceManage financeManage = new FinanceManage();
	    ArrayList recordList = financeManage.findRecord(teamName, year, month);
	    
	    if(recordList==null) {
	    	out.print(html); 
 			out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
 			out.flush();
 			out.close();
	    }
	    else {
	    	model.addAttribute("recordList",recordList);
	    	return "ShowMonthRecord";
	    }
	}
}
