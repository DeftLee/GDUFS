package com.gdufs.graduation;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Date;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.gdufs.dao.GameManageDao;

@Controller

public class DealWithTeamApplyController {
	final static String html=   "<head><link href='./static/css/bootstrap.min.css' rel='stylesheet'>"+ 
			"<link href='./static/css/font-awesome.min.css' rel='stylesheet'>"+ 
			"<link href='./static/css/font-face.css' rel='stylesheet'>"+ 
			"<meta charset='utf-8' />"+ 
			"<script type='text/javascript' src='./static/js/jquery-1.11.2.min.js'></script> "+   
			"<script src='./static/js/bootstrap.min.js'></script>"+  
			"<script src='./static/js/bootbox.min.js'></script></head>";
	
	//主办方去报名处理的页面
	@RequestMapping(value = "/toDealWithApply", method = RequestMethod.GET)
	public String toTeamApply(HttpSession session,Model model) {
		String userName = (String)session.getAttribute("userName");
		GameManageDao manage = new GameManageDao();
		if(userName!=null) {
			ArrayList teamApply = manage.getApplyThings(userName);
			ArrayList teamApplyHis = manage.getApplyDealHis(userName);
			model.addAttribute("teamApply",teamApply);
			model.addAttribute("teamApplyHis",teamApplyHis);
			return "DealWithApply";
		}
		else {
			return "LoginFirst";
		}
	}
	
	//报名处理页面：同意球队报名
	@RequestMapping(value = "/ApproveTeamApply1", method = RequestMethod.POST)
	public void ApproveTeamApply1(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		
		String gameName = request.getParameter("gameName").trim();
		String teamName = request.getParameter("teamName").trim();
		String status = "同意";
		PrintWriter out = response.getWriter();
		GameManageDao manage = new GameManageDao();
		
		String gameStatus = manage.getStatus(gameName);
		boolean checkNumber = manage.checkNumber(gameName);
		if(gameStatus.equals("未开赛")&&!checkNumber) {
			boolean checkApprove = manage.approve(gameName, teamName, status);
			boolean addTeam = manage.addTeam(gameName, teamName);
			if(checkApprove&&addTeam) {
				out.print(html); 
		 		out.print("<body><script>bootbox.alert('<br><B>已同意报名，该球队已被添加到比赛中。',function (){window.location.href='toDealWithApply';})</script></body>");
			}
			else {
				out.print(html); 
		 		out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
			}
		}
		else if(gameStatus.equals("比赛中")) {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>该比赛已经开赛，无法同意添加球队。',function (){window.history.go(-1);})</script></body>");
		}
		else {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>该比赛参赛球队已满，无法同意添加球队。',function (){window.history.go(-1);})</script></body>");
		}
	}
	
	//球队添加页面：同意球队报名
	@RequestMapping(value = "/ApproveTeamApply2", method = RequestMethod.POST)
	public void ApproveTeamApply2(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		
		String gameName = request.getParameter("gameName").trim();
		String teamName = request.getParameter("teamName").trim();
		String status = "同意";
		PrintWriter out = response.getWriter();
		GameManageDao manage = new GameManageDao();
		
		String gameStatus = manage.getStatus(gameName);
		boolean checkNumber = manage.checkNumber(gameName);
		if(gameStatus.equals("未开赛")&&!checkNumber) {
			boolean checkApprove = manage.approve(gameName, teamName, status);
			boolean addTeam = manage.addTeam(gameName, teamName);
			if(checkApprove&&addTeam) {
				out.print(html); 
		 		out.print("<body><script>bootbox.alert('<br><B>已同意报名，该球队已被添加到比赛中。',function (){window.location.href='toDealWithApply';})</script></body>");
			}
			else {
				out.print(html); 
		 		out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
			}
		}
		else if(checkNumber) {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>该比赛参赛球队已满，无法同意添加球队。',function (){window.history.go(-1);})</script></body>");
		}
		else {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>该比赛已经开赛，无法同意添加球队。',function (){window.history.go(-1);})</script></body>");
		}
	}
	
	//报名处理页面：拒绝球队报名
	@RequestMapping(value = "/RejectTeamApply1", method = RequestMethod.POST)
	public void RejectTeamApply1(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		
		String gameName = request.getParameter("gameName").trim();
		String teamName = request.getParameter("teamName").trim();
		String status = "拒绝";
		PrintWriter out = response.getWriter();
		GameManageDao manage = new GameManageDao();
		
		boolean checkApprove = manage.approve(gameName, teamName, status);
		if(checkApprove) {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>已拒绝该球队的报名。',function (){window.location.href='toDealWithApply';})</script></body>");
		}
		else {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
		}
	}
	
	//球队添加页面：拒绝球队报名
	@RequestMapping(value = "/RejectTeamApply2", method = RequestMethod.POST)
	public void RejectTeamApply2(HttpServletRequest request, HttpServletResponse response, HttpSession session,Model model) throws IOException {
		response.setContentType("text/html");
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		
		String gameName = request.getParameter("gameName").trim();
		String teamName = request.getParameter("teamName").trim();
		String status = "拒绝";
		PrintWriter out = response.getWriter();
		GameManageDao manage = new GameManageDao();
		
		boolean checkApprove = manage.approve(gameName, teamName, status);
		if(checkApprove) {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>已拒绝该球队的报名。',function (){window.location.href='toAddTeam';})</script></body>");
		}
		else {
			out.print(html); 
	 		out.print("<body><script>bootbox.alert('<br><B>系统错误，请再试一次。',function (){window.history.go(-1);})</script></body>");
		}
	}
}
